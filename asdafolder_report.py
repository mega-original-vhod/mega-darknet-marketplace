# asdafolder_report.py
import os
from datetime import datetime

def get_file_ext(filename):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞, –∏–ª–∏ '–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è'"""
    if '.' not in filename or os.path.splitext(filename)[0] == '':
        return '–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è'
    return os.path.splitext(filename)[1].lower()

def format_size(bytes_size):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –±–∞–π—Ç—ã –≤ —É–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: KB, MB, GB"""
    for unit in ['B', 'KB', 'MB', 'GB']:
        if bytes_size < 1024.0:
            return f"{bytes_size:.2f} {unit}"
        bytes_size /= 1024.0
    return f"{bytes_size:.2f} TB"

def main():
    print("üìÅ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á—ë—Ç–∞ –ø–æ –ø–∞–ø–∫–µ")
    print("‚Äî" * 60)

    folder = input("–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ: ").strip()
    if not os.path.exists(folder):
        print("‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    if not os.path.isdir(folder):
        print("‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å ‚Äî –Ω–µ –ø–∞–ø–∫–∞.")
        return

    print("\nüîÑ –°–∫–∞–Ω–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã...")

    ext_count = {}      # –°—á—ë—Ç—á–∏–∫ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º
    ext_size = {}       # –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º
    all_files = []      # –î–ª—è –ø–æ–∏—Å–∫–∞ —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö
    total_files = 0
    total_size = 0

    for root, _, files in os.walk(folder):
        for file in files:
            filepath = os.path.join(root, file)
            if not os.path.isfile(filepath):
                continue

            try:
                size = os.path.getsize(filepath)
                ext = get_file_ext(file)

                # –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                ext_count[ext] = ext_count.get(ext, 0) + 1
                ext_size[ext] = ext_size.get(ext, 0) + size
                total_size += size
                total_files += 1

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è —Ç–æ–ø–∞
                all_files.append((filepath, size))

            except Exception as e:
                print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω —Ñ–∞–π–ª {file}: {e}")

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ —Ä–∞–∑–º–µ—Ä—É (—Ç–æ–ø-5 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö)
    top_largest = sorted(all_files, key=lambda x: x[1], reverse=True)[:5]

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞
    report = []
    report.append("üìã –û–¢–ß–Å–¢ –ü–û –ü–ê–ü–ö–ï")
    report.append("=" * 60)
    report.append(f"–ü–∞–ø–∫–∞: {folder}")
    report.append(f"–î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    report.append(f"–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {total_files}")
    report.append(f"–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {format_size(total_size)}")
    report.append("")

    report.append("üìÇ –§–∞–π–ª—ã –ø–æ —Ç–∏–ø–∞–º:")
    report.append("‚Äî" * 60)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É
    for ext in sorted(ext_count, key=ext_count.get, reverse=True):
        count = ext_count[ext]
        size = format_size(ext_size[ext])
        report.append(f"{ext:15} ‚Äî {count:4} —Ñ–∞–π–ª(–æ–≤), {size}")

    report.append("")
    report.append("üèÜ –¢–æ–ø-5 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤:")
    report.append("‚Äî" * 60)
    for i, (path, size) in enumerate(top_largest, 1):
        short_path = path.replace(folder, "...") if len(path) > 50 else path
        report.append(f"{i}. {format_size(size)} ‚Äî {short_path}")

    # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    print("\n".join(report))

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    report_file = os.path.join(folder, "folder_report.txt")
    counter = 1
    while os.path.exists(report_file):
        name, ext = os.path.splitext(report_file)
        report_file = f"{name}_{counter}{ext}"
        counter += 1

    try:
        with open(report_file, "w", encoding="utf-8") as f:
            f.write("\n".join(report))
        print(f"\n‚úÖ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {report_file}")
    except Exception as e:
        print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á—ë—Ç: {e}")

    print("‚ú® –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω.")

if __name__ == "__main__":
    main()
